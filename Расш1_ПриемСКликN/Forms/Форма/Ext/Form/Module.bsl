
&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "XML файл (*.xml)|*.xml";
	
	Если Диалог.Выбрать() Тогда
		ЭтотОбъект.Файл = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПолучитьНаСервере(АдресХранилища)
	
	Данные = РеквизитФормыВЗначение("Объект");
		
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Расш1_XMLПередача.xml КАК xml,
	//	|	Расш1_XMLПередача.УИДСтрока КАК УИДСтрока
	//	|ИЗ
	//	|	РегистрСведений.Расш1_XMLПередача КАК Расш1_XMLПередача
	//	|ГДЕ
	//	|	Расш1_XMLПередача.ДатаЗагрузки > &ДатаНачала";
	//
	//Запрос.УстановитьПараметр("ДатаНачала", Дата(2020,9,3));
	////Запрос.УстановитьПараметр("ДатаОкончания", Дата(2020,9,2,23,59,59));
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	Вр = ПолучитьИмяВременногоФайла("xml");
	//	Текст = Новый ЗаписьТекста;
	//	Текст.Открыть(Вр);
	//	Текст.Записать(ВыборкаДетальныеЗаписи.xml);
	//	Текст.Закрыть();
	//	
	//	АдресХранилища = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Вр), ЭтаФорма.УникальныйИдентификатор);
		Данные.Инициализация(АдресХранилища);//,ВыборкаДетальныеЗаписи.УИДСтрока);
	//КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	

	
	
	//
	//ЗаписьВЖурнал("Начало обмена", УровеньЖурналаРегистрации.Информация);
	//
	//КлиентКомпоненты = ПолучитьКомпонентуСервер();
	//ВрФайл = ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, ЭтаФорма);
	//
	//Если ВрФайл = Неопределено Тогда
	//	ЗаписьВЖурнал("Завершение обмена. Очередь пустая.", УровеньЖурналаРегистрации.Информация);
	//	Возврат;
	//КонецЕсли;
	//
	//Ошибки = Новый Массив;
	//
	//ЧтениеXML = Новый ЧтениеXML;
	//ЧтениеXML.ОткрытьФайл(ВрФайл);
	//
	//ПостроительDOM = Новый ПостроительDOM;
	//ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	//Контрагент = Неопределено;
	//Организация = Неопределено;
	//Договор = Неопределено;
	//Валюта = Неопределено;
	//
	//Для Каждого message Из ДокументDOM.ДочерниеУзлы Цикл
	//	
	//	Если message.Атрибуты.Количество() > 0 И message.Атрибуты[0].Значение = "Документ.СчетОплатыПоставщику" Тогда
	//		Для Каждого элемент Из message.ДочерниеУзлы Цикл
	//			Если элемент.ИмяУзла = "Справочник.Контрагенты" Тогда
	//				   Контрагент = XML_Справочник_Контрагенты(элемент, Ошибки);	
	//			ИначеЕсли элемент.ИмяУзла = "Справочник.Организации" Тогда
	//				  Организация = XML_Справочник_Организация(элемент, Ошибки);					
	//			ИначеЕсли элемент.ИмяУзла = "Справочник.Договора" Тогда
	//				  Договор = XML_Справочник_Договора(элемент, Организация, Контрагент, Валюта, Ошибки);
	//			ИначеЕсли элемент.ИмяУзла = "Справочник.Валюты" Тогда
	//				  Валюта = XML_Справочник_Валюты(элемент, Ошибки);
	//			ИначеЕсли элемент.ИмяУзла = "Справочник.ЕдиницыИзмерения" Тогда
	//				  XML_Справочник_ЕдиницыИзмерения(элемент, Ошибки);
	//			ИначеЕсли элемент.ИмяУзла = "Справочник.Номенклатура" Тогда
	//				  XML_Справочник_Номенклатура(элемент, Ошибки);
	//			ИначеЕсли элемент.ИмяУзла = "Документ.СчетОплатыПоставщику" Тогда
	//				  XML_Документ_СчетОплатыПоставщику(элемент, Организация, Контрагент, Договор, Валюта, Ошибки);
	//			КонецЕсли;				  
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЦикла;	
	//
	//Для Каждого Элем Из Ошибки Цикл
	//	ЗаписьВЖурнал(Элем, УровеньЖурналаРегистрации.Ошибка);	
	//КонецЦикла;
	//
	//ЗаписьВЖурнал("Завершение обмена", УровеньЖурналаРегистрации.Информация);
КонецПроцедуры

&НаКлиенте
Процедура Получить(Команда)
	АдресХранилища = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ЭтотОбъект.Файл), ЭтаФорма.УникальныйИдентификатор);
	ПолучитьНаСервере(АдресХранилища);
КонецПроцедуры

&НаСервереБезКонтекста
Функция XML_Справочник_Контрагенты(Элементы, Ошибки)	
	Результат = Новый Структура;
	КонтактнаяИнформация = Неопределено;
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если  элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Наименование" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ЮрФизЛицо" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;
			    Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;                                     
		
		Если элемент.ИмяУзла = "КонтактнаяИнформация" Тогда
			КонтактнаяИнформация = элемент;
		ИначеЕсли элемент.ИмяУзла = "ИностраннаяКомпания" Тогда
			 Результат.Вставить(элемент.ИмяУзла,XMLЗначение(тип("Булево"),элемент.ТекстовоеСодержимое));
		Иначе
			Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
		КонецЕсли;
	КонецЦикла;
	
	Если Ном <> 3 Тогда
		Ошибки.Добавить("Справочник.Контрагент, не все ключевые поля присутствуют.");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", Результат.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ресурс;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ИНН) Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Контрагенты.Партнер КАК Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И Контрагенты.КПП = &КПП";
			
			Запрос.УстановитьПараметр("ИНН", Результат.ИНН);
			Если ЗначениеЗаполнено(Результат.КПП) Тогда
				Запрос.УстановитьПараметр("КПП", Результат.КПП);
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Контрагенты.КПП = &КПП","");
			КонецЕсли;
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
				Набор.УИД = Результат.КодВПрограмме;
				Набор.Ресурс = ВыборкаДетальныеЗаписи.Ссылка;
				Набор.Записать();
				Возврат ВыборкаДетальныеЗаписи.Ссылка;				
			КонецЕсли;
		КонецЕсли;
		
		Партнер = Справочники.Партнеры.СоздатьЭлемент();
		Партнер.ДатаРегистрации = ТекущаяДата();
		Партнер.Поставщик = Истина;
		Партнер.Наименование = Результат.Наименование;
		Партнер.НаименованиеПолное = Результат.НаименованиеПолное;
		Партнер.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;

		Контрагент = Справочники.Контрагенты.СоздатьЭлемент();
		Контрагент.Наименование = Результат.Наименование;
		Контрагент.НаименованиеПолное = Результат.НаименованиеПолное;
		
		Если НЕ Результат.ИностраннаяКомпания Тогда
			Контрагент.ИНН = Результат.ИНН;
			Контрагент.КПП = Результат.КПП;
			
			Попытка
				Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо[Результат.ЮрФизЛицо];
			Исключение
				Ошибки.Добавить("Перечисление ЮрФизЛицо, ошибка - " + Результат.СтранаРегистрации);
			КонецПопытки;

		Иначе
			Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Результат.СтранаРегистрации) Тогда
			Контрагент.СтранаРегистрации = НайтиСтрануРегистрации(Результат.СтранаРегистрации);
		КонецЕсли;

				
		КонтактнаяИнфа = Новый Массив;		
		Если КонтактнаяИнформация <> Неопределено Тогда			
			Для Каждого i Из КонтактнаяИнформация.ДочерниеУзлы Цикл 
				КонтактнаяИнфаСтруктура = Новый Структура;
				Для Каждого j Из i.ДочерниеУзлы Цикл 
					КонтактнаяИнфаСтруктура.Вставить(j.ИмяУзла,j.ТекстовоеСодержимое);
				КонецЦикла;
				КонтактнаяИнфа.Добавить(КонтактнаяИнфаСтруктура);
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого i Из КонтактнаяИнфа Цикл
			Если i.ВидКонтактнойИнформации = "ФактическийАдрес" Тогда
				Запись = Контрагент.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				Запись.Представление = i.ЗначенияПолей;
				
				Запись = Партнер.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				Запись.Представление = i.ЗначенияПолей;
			ИначеЕсли i.ВидКонтактнойИнформации = "ВебСтраница" Тогда
				Запись = Контрагент.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты;
				Запись.Представление = i.ЗначенияПолей;
				
				Запись = Партнер.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.ДругаяИнформацияКонтрагенты;
				Запись.Представление = i.ЗначенияПолей;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			Партнер.Записать();
			Контрагент.Партнер = Партнер.Ссылка;

			Контрагент.Записать();
			Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
			Набор.УИД = Результат.КодВПрограмме;
			Набор.Ресурс = Партнер.Ссылка;
			Набор.Записать();
			Возврат  Партнер.Ссылка;
		Исключение
			Ошибки.Добавить("Запись элемента контрагента. " + ОписаниеОшибки());
		КонецПопытки;
		
КонецФункции

&НаСервереБезКонтекста
Функция XML_Справочник_Организация(Элементы, Ошибки)
	
	Результат = Новый Структура;
	КонтактнаяИнформация = Неопределено;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Наименование" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ЮрФизЛицо" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ИНН" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "КПП" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;		
				Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Если элемент.ИмяУзла = "КонтактнаяИнформация" Тогда
			КонтактнаяИнформация = элемент;
		КонецЕсли;
		Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 4 Тогда
		Ошибки.Добавить("Справочник.Организации, не все ключевые поля присутствуют.");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", Результат.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ресурс;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ИНН) Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Организации.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Организации КАК Организации
			|ГДЕ
			|	Организации.ИНН = &ИНН
			|	И Организации.КПП = &КПП";
			
			Запрос.УстановитьПараметр("ИНН", Результат.ИНН);
			Если ЗначениеЗаполнено(Результат.КПП) Тогда
				Запрос.УстановитьПараметр("КПП", Результат.КПП);
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Организации.КПП = &КПП","");
			КонецЕсли;
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
				Набор.УИД = Результат.КодВПрограмме;
				Набор.Ресурс = ВыборкаДетальныеЗаписи.Ссылка;
				Набор.Записать();
				Возврат ВыборкаДетальныеЗаписи.Ссылка;				
			КонецЕсли;
		КонецЕсли;
		
		Организация = Справочники.Организации.СоздатьЭлемент();
		Организация.ДатаРегистрации = ТекущаяДата();
		Организация.ИНН = Результат.ИНН;
		Организация.КПП = Результат.КПП;
        Организация.Наименование = Результат.Наименование;
		Организация.НаименованиеСокращенное = Результат.Наименование;
		Организация.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
		
		Если Результат.Свойство("НаименованиеПолное") Тогда
			Организация.НаименованиеПолное = Результат.НаименованиеПолное;
		КонецЕсли;
		Если Результат.Свойство("ОГРН") Тогда
			Организация.ОГРН = Результат.ОГРН;
		КонецЕсли;
		Организация.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;

		КонтактнаяИнфа = Новый Массив;		
		Если КонтактнаяИнформация <> Неопределено Тогда			
			Для Каждого i Из КонтактнаяИнформация.ДочерниеУзлы Цикл 
				КонтактнаяИнфаСтруктура = Новый Структура;
				Для Каждого j Из i.ДочерниеУзлы Цикл 
					КонтактнаяИнфаСтруктура.Вставить(j.ИмяУзла,j.ТекстовоеСодержимое);
				КонецЦикла;
				КонтактнаяИнфа.Добавить(КонтактнаяИнфаСтруктура);
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого i Из КонтактнаяИнфа Цикл
			Если i.ВидКонтактнойИнформации = "ФактическийАдрес" Тогда
				Запись = Организация.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
				Запись.Представление = i.ЗначенияПолей;
			ИначеЕсли i.ВидКонтактнойИнформации = "АдресЭлектроннойПочты" Тогда
				Запись = Организация.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.Email;
				Запись.Представление = i.ЗначенияПолей;
			ИначеЕсли i.ВидКонтактнойИнформации = "ВебСтраница" Тогда
				Запись = Организация.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.Другое;
				Запись.Представление = i.ЗначенияПолей;
			ИначеЕсли i.ВидКонтактнойИнформации = "Телефон" Тогда
				Запись = Организация.КонтактнаяИнформация.Добавить();
				Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
				Запись.Вид = Справочники.ВидыКонтактнойИнформации.Телефон;
				Запись.Представление = i.ЗначенияПолей;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			Организация.Записать();
			Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
			Набор.УИД = Результат.КодВПрограмме;
			Набор.Ресурс = Организация.Ссылка;
			Набор.Записать();
			Возврат  Организация.Ссылка;
		Исключение
			Ошибки.Добавить("Запись элемента организации. " + ОписаниеОшибки());
		КонецПопытки;

КонецФункции

&НаСервереБезКонтекста
Функция XML_Справочник_Договора(Элементы, Организация, Контрагент, Валюта, Ошибки)
	Результат = Новый Структура;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ВидДоговора" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Контрагент" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Организация" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;		
				Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 4 Тогда
		Ошибки.Добавить("Справочник.Договоры, не все ключевые поля присутствуют.");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", Результат.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ресурс;
	КонецЕсли;
			
		Соглашение = Справочники.СоглашенияСПоставщиками.СоздатьЭлемент();
		Соглашение.Статус = Перечисления.СтатусыСоглашенийСПоставщиками.Действует;
		Соглашение.Согласован = Истина;		
		Соглашение.Организация = Организация;
		Соглашение.Партнер = Контрагент;
		Соглашение.Контрагент = НайтиКонтрагента(Контрагент);
		Соглашение.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		Соглашение.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
		
		Если Результат.Свойство("СрокДействия") Тогда
			Соглашение.ДатаНачалаДействия = XMLЗначение(тип("Дата"),Результат.СрокДействия);
			
			Если Результат.Свойство("Дата") Тогда
				Соглашение.Дата = XMLЗначение(тип("Дата"),Результат.Дата);
			Иначе
				Соглашение.Дата = Соглашение.ДатаНачалаДействия 				
			КонецЕсли;
		Иначе
			Соглашение.Дата = ТекущаяДата();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Валюта) Тогда
			Соглашение.Валюта = Валюта;
			Соглашение.ВалютаВзаиморасчетов = Валюта; 
			Если Валюта.Код = "643" Тогда
				Соглашение.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
			Иначе
				Соглашение.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
			КонецЕсли;
		Иначе
			Соглашение.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
			Соглашение.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			Соглашение.ВалютаВзаиморасчетов = Соглашение.Валюта;
		КонецЕсли;
       		
		Если Результат.Свойство("Номер") Тогда
			Соглашение.Номер = Результат.Номер;
		КонецЕсли;
		
		Если Результат.Свойство("Наименование") Тогда
			Соглашение.Наименование = Результат.Наименование;
		Иначе
			Соглашение.Наименование = "Основное соглашение от " + Формат(Соглашение.Дата,"ДЛФ=Д") + " г.";
		КонецЕсли;

		Соглашение.ЦенаВключаетНДС = Истина;
									
		Попытка
			Соглашение.Записать();
			Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
			Набор.УИД = Результат.КодВПрограмме;
			Набор.Ресурс = Соглашение.Ссылка;
			Набор.Записать();
			Возврат  Соглашение.Ссылка;
		Исключение
			Ошибки.Добавить("Запись элемента договора. " + ОписаниеОшибки());
		КонецПопытки;

КонецФункции

&НаСервереБезКонтекста
Функция XML_Справочник_Валюты(Элементы, Ошибки)
	Результат = Новый Структура;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "Код" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Наименование" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;		
				Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 2 Тогда
		Ошибки.Добавить("Справочник.Валюты, не все ключевые поля присутствуют.");
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Валюты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	Валюты.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", Результат.Код);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат = Неопределено;
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаСервереБезКонтекста
Процедура XML_Справочник_ЕдиницыИзмерения(Элементы, Ошибки)
	Результат = Новый Структура;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Наименование" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;		
				Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 2 Тогда
		Ошибки.Добавить("Справочник.ЕдиницыИзмерения, не все ключевые поля присутствуют.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", Результат.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	
		Запрос.Текст = 
			"ВЫБРАТЬ
				|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
				|ГДЕ
				|	УпаковкиЕдиницыИзмерения.Код = &Код";
			
			Запрос.УстановитьПараметр("Код", Результат.КодВПрограмме);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
				Набор.УИД = Результат.КодВПрограмме;
				Набор.Ресурс = ВыборкаДетальныеЗаписи.Ссылка;
				Набор.Записать();
				Возврат;				
			КонецЕсли;
			
	ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
	ЕдиницаИзмерения.Код = Результат.КодВПрограмме;
	ЕдиницаИзмерения.Наименование = Результат.Наименование;
				
	Попытка
		ЕдиницаИзмерения.Записать();
		Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
		Набор.УИД = Результат.КодВПрограмме;
		Набор.Ресурс = ЕдиницаИзмерения.Ссылка;
		Набор.Записать();
	Исключение
		Ошибки.Добавить("Запись элемента единицы измерения. " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура XML_Справочник_Номенклатура(Элементы, Ошибки)
	Результат = Новый Структура;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "Артикул" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "Наименование" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ЕдиницаИзмерения" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				ИначеЕсли j.ИмяУзла = "ТипНоменклатуры" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
				КонецЕсли;		
				Результат.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Результат.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 5 Тогда
		Ошибки.Добавить("Справочник.Номенклатура, не все ключевые поля присутствуют.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", Результат.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	
		Запрос.Текст = 
			"ВЫБРАТЬ
				|	Номенклатура.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	Номенклатура.Наименование = &Наименование
				|	И Номенклатура.Артикул = &Артикул";
			
			Запрос.УстановитьПараметр("Артикул", Результат.Артикул);
			Запрос.УстановитьПараметр("Наименование", Результат.Наименование);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
				Набор.УИД = Результат.КодВПрограмме;
				Набор.Ресурс = ВыборкаДетальныеЗаписи.Ссылка;
				Набор.Записать();
				Возврат;				
			КонецЕсли;
			
	Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	Номенклатура.Артикул = Результат.Артикул;
	Номенклатура.Наименование = Результат.Наименование;
	Номенклатура.ЕдиницаИзмерения = НайтиЕдиницуИзмерения(Результат.КодВПрограмме);
	Номенклатура.ЕдиницаДляОтчетов = Номенклатура.ЕдиницаИзмерения;
	Номенклатура.КоэффициентЕдиницыДляОтчетов = 1;
	Номенклатура.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	Номенклатура.СтавкаНДС = Перечисления.СтавкиНДС.НДС20;
	
	Если Результат.Свойство("СрокГодности") Тогда
		Попытка
			Номенклатура.СрокГодности = XMLЗначение(тип("Дата"),Результат.СрокГодности);
		Исключение
			Ошибки.Добавить("Срок годности товара ." + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Попытка
		Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры[Результат.ТипНоменклатуры];
	Исключение
		Ошибки.Добавить("Тип товара - " + Результат.ТипНоменклатуры + " " + ОписаниеОшибки());
	КонецПопытки;

	Попытка
		Номенклатура.Записать();
		Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
		Набор.УИД = Результат.КодВПрограмме;
		Набор.Ресурс = Номенклатура.Ссылка;
		Набор.Записать();
	Исключение
		Ошибки.Добавить("Запись элемента номенклатуры. " + ОписаниеОшибки());
		Номенклатура.Наименование = Результат.Наименование + " (" + Результат.Артикул + ")";		
	КонецПопытки;
	
	Попытка
		Номенклатура.Записать();
		Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
		Набор.УИД = Результат.КодВПрограмме;
		Набор.Ресурс = Номенклатура.Ссылка;
		Набор.Записать();
	Исключение
		Ошибки.Добавить("Запись элемента номенклатуры. " + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура XML_Документ_СчетОплатыПоставщику(Элементы, Организация, Контрагент, Договор, Валюта, Ошибки)
	
	РезультатШапка = Новый Структура;
	МассивТовары = Новый Массив;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "Дата" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					Попытка
						РезультатШапка.Вставить(j.ИмяУзла,XMLЗначение(тип("Дата"),j.ТекстовоеСодержимое));
					Исключение
						Ошибки.Добавить("Преобразование даты документа. " + ОписаниеОшибки());
					КонецПопытки;
				ИначеЕсли j.ИмяУзла = "Номер" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Организация" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли ВРег(j.ИмяУзла) = ВРег("Контрагент") И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Договор" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				КонецЕсли;		
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		Если элемент.ИмяУзла = "Товары" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				РезультатТовары = Новый Структура;
				Для Каждого jj Из j.ДочерниеУзлы Цикл
					Если jj.ИмяУзла = "Сумма" ИЛИ jj.ИмяУзла = "СуммаНДС" ИЛИ jj.ИмяУзла = "Цена" ИЛИ jj.ИмяУзла = "ЦенаЗаУпаковку" 
						ИЛИ jj.ИмяУзла = "Количество" ИЛИ jj.ИмяУзла = "КоличествоУпаковок" Тогда
						Попытка
							РезультатТовары.Вставить(jj.ИмяУзла,XMLЗначение(тип("Число"),jj.ТекстовоеСодержимое));
						Исключение
							Ошибки.Добавить("Преобразование сумм в документе. " + j.ИмяУзла + " " + ОписаниеОшибки());
						КонецПопытки;						
					Иначе
						РезультатТовары.Вставить(jj.ИмяУзла,XMLСтрока(jj.ТекстовоеСодержимое));
					КонецЕсли;
				КонецЦикла;
				МассивТовары.Добавить(РезультатТовары);
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		РезультатШапка.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 6 Тогда
		Ошибки.Добавить("Документ.ЗаказПоставщику, не все ключевые поля присутствуют.");
		Возврат;
	КонецЕсли;
	
	Док = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", РезультатШапка.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЕстьДокумент = Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Док = ВыборкаДетальныеЗаписи.Ресурс.ПолучитьОбъект();		
		ЕстьДокумент = Истина;
	КонецЕсли;
	
	Если Док = Неопределено Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
				|	ЗаказПоставщику.Ссылка КАК Ссылка
				|ИЗ
				|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
				|ГДЕ
				|	ЗаказПоставщику.Дата = &Дата
				|	И ЗаказПоставщику.Номер = &Номер
				|	И ЗаказПоставщику.Партнер = &Контрагент
				|	И ЗаказПоставщику.Организация = &Организация";
			
			Запрос.УстановитьПараметр("Дата", РезультатШапка.Дата);
			Запрос.УстановитьПараметр("Номер", РезультатШапка.Номер);
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
			Запрос.УстановитьПараметр("Организация", Организация);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Док = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
		
		Если Док = Неопределено Тогда
			Док = Документы.ЗаказПоставщику.СоздатьДокумент();
		Иначе
			Док.Товары.Очистить();
		КонецЕсли;
		
		Док.Дата = РезультатШапка.Дата;
		Док.Номер = РезультатШапка.Номер;
		Док.Партнер = Контрагент;
		Док.Контрагент = НайтиКонтрагента(Контрагент);
		Док.Организация = Организация;
		Док.Валюта = Валюта;
		Док.ЦенаВключаетНДС = XMLЗначение(тип("Булево"),РезультатШапка.СуммаВключаетНДС);
		Док.Статус = Перечисления.СтатусыЗаказовПоставщикам.Согласован;
		Док.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");
		Док.Согласован = Истина;
		Док.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		Док.Склад = Справочники.Склады.НайтиПоНаименованию("Склад РСГ");
		Док.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		Док.Соглашение = Договор;
		
		Для Каждого Элем Из МассивТовары Цикл
			НоваяСтрока = Док.Товары.Добавить();
			НоваяСтрока.Номенклатура = НайтиОбъектСинхронизации(Элем.Номенклатура);
			НоваяСтрока.Упаковка = НайтиОбъектСинхронизации(Элем.ЕдиницаУпаковок);
			НоваяСтрока.КоличествоУпаковок = Элем.КоличествоУпаковок;
			НоваяСтрока.Количество = Элем.Количество;
			НоваяСтрока.Цена = Элем.Цена;
			НоваяСтрока.Сумма = Элем.Сумма;
			НоваяСтрока.Склад = Док.Склад;
			НоваяСтрока.СуммаНДС = Элем.СуммаНДС;
			НоваяСтрока.СуммаСНДС = Элем.СуммаНДС + Элем.Сумма;
			Попытка
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС[Элем.СтавкаНДС];
			Исключение
				Ошибки.Добавить("Ставка НДС - " + Элем.СтавкаНДС + " " + ОписаниеОшибки());
			КонецПопытки;			
		КонецЦикла;
		
		Док.СуммаДокумента = Док.товары.Итог("СуммаСНДС");
		
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Ошибки.Добавить("Запись документа ЗаказПоставщику " + ОписаниеОшибки());
			Док.Записать(РежимЗаписиДокумента.Запись);
		КонецПопытки;
		
		Если НЕ ЕстьДокумент Тогда
			Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
			Набор.УИД = РезультатШапка.КодВПрограмме;
			Набор.Ресурс = Док.Ссылка;
			Набор.Записать();
		КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиЕдиницуИзмерения(Код)
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Валюты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	Валюты.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", Код);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция НайтиСтрануРегистрации(Код)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтраныМира.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтраныМира КАК СтраныМира
		|ГДЕ
		|	СтраныМира.Код = &Код";
	
	Запрос.УстановитьПараметр("Код", Код);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	                              
	Результат = Справочники.СтраныМира.ПустаяСсылка();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиКонтрагента(Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Партнер = &Партнер";
	
	Запрос.УстановитьПараметр("Партнер", Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Результат = Неопределено;
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция НайтиОбъектСинхронизации(УИД)
	Результат = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", УИД);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Ресурс;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписьВЖурнал(Сообщение, Уровень)
	ЗаписьЖурналаРегистрации("РегламентноеЗадание.ЗагрузкаДанныхСКлика", 
        Уровень, , ,
        Сообщение);
КонецПроцедуры
	
&НаСервере
Функция ПолучитьАдресМакетаКомпановкиНаСервере(УникальныйИдентификатор)
	
	МакетВнешнейКомпоненты    = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ВнешняяКомпонента");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(МакетВнешнейКомпоненты, УникальныйИдентификатор);
	
	Возврат АдресВоВременномХранилище;
	
КонецФункции
	
&НаСервере
Функция ПолучитьКомпонентуСервер()
	
	КлиентКомпоненты = Неопределено;
	Если Не ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты) Тогда
		
		ПодключитьКомпонентуСервер();
		ИнициализироватьКомпонентуКлиентСервер(КлиентКомпоненты);
		
	КонецЕсли;
	
	Возврат КлиентКомпоненты;
КонецФункции        

&НаКлиентеНаСервереБезКонтекста
Функция ИнициализироватьКомпонентуКлиентСервер(Компонента)
	
	Попытка
		Компонента  = Новый("AddIn.BITERP.PinkRabbitMQ");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ПодключитьКомпонентуСервер(КомпонентаПодключена = Неопределено)
	Попытка
		АдресВоВременномХранилище = ПолучитьАдресМакетаКомпановкиНаСервере(ЭтаФорма.УникальныйИдентификатор);
		КомпонентаПодключена = ПодключитьВнешнююКомпоненту(
				АдресВоВременномХранилище,
				"BITERP",
				ТипВнешнейКомпоненты.Native);
	Исключение
		ЗаписьВЖурнал(ОписаниеОшибки(), УровеньЖурналаРегистрации.Ошибка);		
	КонецПопытки;		
КонецПроцедуры

&НаСервере
Функция ПрочитатьСообщениеКлиентСервер(КлиентКомпоненты, Форма)
	Адрес = "125.62.28.226";
	Порт = 5672;
	Логин = "admin";
	Пароль = "1qaz2wsX";
	ВиртуальныйХост = "/";
	ИмяОчереди = "KlikIn1c";
	
	Попытка
		КлиентКомпоненты.Connect(
			Адрес,
			Порт,
			Логин,
			Пароль,
			ВиртуальныйХост);
		
		Попытка
			КлиентКомпоненты.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
			
			Потребитель = КлиентКомпоненты.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
			
			ОтветноеСообщение = "";
			Если КлиентКомпоненты.BasicConsumeMessage("", ОтветноеСообщение, 5) Тогда
				КлиентКомпоненты.BasicAck();
				ВрФайл = ПолучитьИмяВременногоФайла("xml");
				ТектовыйФайл = Новый ТекстовыйДокумент;
				ТектовыйФайл.УстановитьТекст(ОтветноеСообщение);
				ТектовыйФайл.Записать(ВрФайл,КодировкаТекста.UTF8,Символы.ВК+Символы.ПС);
				Возврат ВрФайл;
			КонецЕсли;
			КлиентКомпоненты.BasicCancel("");
		Исключение
			ЗаписьВЖурнал(ОписаниеОшибки() + " " + КлиентКомпоненты.GetLastError(), УровеньЖурналаРегистрации.Ошибка);
		КонецПопытки;
	Исключение
		ош1 = КлиентКомпоненты.GetLastError();
		ош2 = ОписаниеОшибки(); 
		ЗаписьВЖурнал(ОписаниеОшибки(), УровеньЖурналаРегистрации.Ошибка);
	КонецПопытки;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура XML_Документ_ЗаявкаНаРасходованиеДС(Элементы, Организация, Контрагент, Договор, Валюта, Ошибки)
	
	РезультатШапка = Новый Структура;
	МассивТовары = Новый Массив;
	
	Ном = 0;
	Для Каждого Элемент Из Элементы.ДочерниеУзлы Цикл
		Если элемент.ИмяУзла = "КлючевыеСвойства" Тогда
			Для Каждого j Из элемент.ДочерниеУзлы Цикл
				Если j.ИмяУзла = "Дата" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					Попытка
						РезультатШапка.Вставить(j.ИмяУзла,XMLЗначение(тип("Дата"),j.ТекстовоеСодержимое));
					Исключение
						Ошибки.Добавить("Преобразование даты документа. " + ОписаниеОшибки());
					КонецПопытки;
				ИначеЕсли j.ИмяУзла = "Номер" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Организация" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли ВРег(j.ИмяУзла) = ВРег("Контрагент") И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Договор" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "КодВПрограмме" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Статус" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "Сумма" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLЗначение(тип("Число"),j.ТекстовоеСодержимое));
				ИначеЕсли j.ИмяУзла = "НомерPO" И ЗначениеЗаполнено(j.ТекстовоеСодержимое) Тогда
					Ном = Ном + 1;
					РезультатШапка.Вставить(j.ИмяУзла,XMLСтрока(j.ТекстовоеСодержимое));
				КонецЕсли;		
			КонецЦикла;
			Продолжить;
		КонецЕсли;
		РезультатШапка.Вставить(элемент.ИмяУзла,XMLСтрока(элемент.ТекстовоеСодержимое));		
	КонецЦикла;
	
	Если Ном <> 9 Тогда
		Ошибки.Добавить("Документ.ЗаявкаНаРасходованиеДС, не все ключевые поля присутствуют.");
		Возврат;
	КонецЕсли;
	
	Док = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расш1_СоответствияКлик1С.Ресурс КАК Ресурс
		|ИЗ
		|	РегистрСведений.Расш1_СоответствияКлик1С КАК Расш1_СоответствияКлик1С
		|ГДЕ
		|	Расш1_СоответствияКлик1С.УИД = &УИД";
	
	Запрос.УстановитьПараметр("УИД", РезультатШапка.КодВПрограмме);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЕстьДокумент = Ложь;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Док = ВыборкаДетальныеЗаписи.Ресурс.ПолучитьОбъект();		
		ЕстьДокумент = Истина;
	КонецЕсли;
	
	Если Док = Неопределено Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
			|ГДЕ
			|	ЗаявкаНаРасходованиеДенежныхСредств.Организация = &Организация
			|	И ЗаявкаНаРасходованиеДенежныхСредств.Номер = &Номер
			|	И ЗаявкаНаРасходованиеДенежныхСредств.Дата = &Дата
			|	И ЗаявкаНаРасходованиеДенежныхСредств.Контрагент = &Контрагент";
			
			Запрос.УстановитьПараметр("Дата", РезультатШапка.Дата);
			Запрос.УстановитьПараметр("Номер", РезультатШапка.Номер);
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
			Запрос.УстановитьПараметр("Организация", Организация);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Док = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			КонецЕсли;
		КонецЕсли;
		
		Если Док = Неопределено Тогда
			Док = Документы.ЗаявкаНаРасходованиеДенежныхСредств.СоздатьДокумент();
		Иначе
			Док.РасшифровкаПлатежа.Очистить();
		КонецЕсли;
		
		Док.Дата = РезультатШапка.Дата;
		Док.Номер = РезультатШапка.Номер;
		Док.Партнер = Контрагент;
		Док.Контрагент = НайтиКонтрагента(Контрагент);
		Док.Организация = Организация;
		Док.Валюта = Валюта;
		Док.ПеречислениеВБюджет = Ложь;
		Док.ПланированиеСуммы = Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа;
		Док.ПлатежиПо275ФЗ = Ложь;
		Док.ПриоритетОплаты = Справочники.ПриоритетыОплаты.НайтиПоНаименованию("Средний");
		Док.СверхЛимита = Ложь;
		Док.СписокФизЛиц = Ложь;
		
		Попытка
			Док.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств[РезультатШапка.Статус];
		Исключение
			Ошибки.Добавить("Ошибка статуса документа ЗаявкаНаРасходованиеДенежныхСредств. " + РезультатШапка.Статус + ". " + ОписаниеОшибки());
		КонецПопытки;
		
		Док.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику;		
		Док.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
		Док.СуммаДокумента = РезультатШапка.Сумма;
		Док.ФормаОплатыБезналичная = Истина;
		Док.ФормаОплатыЗаявки = Перечисления.ФормыОплаты.Безналичная;
		Док.ФормаОплатыНаличная = Ложь;		
		Док.ФормаОплатыПлатежнаяКарта = Ложь;
		
		НоваяСтрока = Док.РасшифровкаПлатежа.Добавить();
		НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Партнер = Контрагент;
		
		Если РезультатШапка.Свойство("СтавкаНДС") Тогда
			Попытка
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС[РезультатШапка.СтавкаНДС];
			Исключение
				Ошибки.Добавить("Ставка НДС - " + РезультатШапка.СтавкаНДС + " " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
		Если РезультатШапка.Свойство("СуммаНДС") Тогда
			НоваяСтрока.СуммаНДС = РезультатШапка.СуммаНДС;	
		КонецЕсли;
		
		НоваяСтрока.Сумма = РезультатШапка.Сумма;
		НоваяСтрока.СуммаВзаиморасчетов = РезультатШапка.Сумма;

		Попытка
			Док.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			Ошибки.Добавить("Запись документа ЗаявкаНаРасходованиеДенежныхСредств " + ОписаниеОшибки());
		КонецПопытки;
		
		Если НЕ ЕстьДокумент Тогда
			Набор = РегистрыСведений.Расш1_СоответствияКлик1С.СоздатьМенеджерЗаписи();
			Набор.УИД = РезультатШапка.КодВПрограмме;
			Набор.Ресурс = Док.Ссылка;
			Набор.Записать();
		КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	Данные = РеквизитФормыВЗначение("Объект");
	Данные.ОтправитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РСКонтрагентовНаСервере()
	Данные = РеквизитФормыВЗначение("Объект");
	Данные.ОтправитьБанковскиеРеквизитыКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура РСКонтрагентов(Команда)
	РСКонтрагентовНаСервере();
КонецПроцедуры
